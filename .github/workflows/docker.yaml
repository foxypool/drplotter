name: Docker

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag of upstream drplotter repo"
        required: true
        type: string
      tag-as-latest:
        description: "Tag the built images as latest"
        required: true
        type: boolean
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build-and-push-images:
    name: Build and push images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - final-build-stage: plotter
          - final-build-stage: solver
          - final-build-stage: server
          - final-build-stage: harvester
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=${{ inputs.tag-as-latest }}
            suffix=-${{ matrix.final-build-stage }},onlatest=true
          tags: |
            type=raw,value=${{ inputs.tag }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: GITHUB_RELEASE_TAG=${{ inputs.tag }}
          target: ${{ matrix.final-build-stage }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
